# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches:
      - 'dev'
  pull_request:
    branches:
      - main
      - 'releases/**'

env:
  PROJECT_ID: alokproject-201614
  GKE_CLUSTER: autopilot-cluster-2  # Add your cluster name here.
  GKE_ZONE: europe-west1-d   # Add your cluster zone here.
  DEPLOYMENT_NAME: dev # Add your deployment name here.
  IMAGE: web
  DOCKER_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go '1.21.x'
      uses: actions/setup-go@v5
      with:
        go-version: '1.21.x'

    # You can test your matrix by printing the current Go version
    - name: Display Go version
      run: go version

    - name: Install dependencies
      run: cd go && go get .

    - name: Go Tidy
      run: cd go && go mod tidy && git diff --exit-code

    - name: Go Mod
      run: cd go && go mod download

    - name: Go Mod Verify
      run: cd go && go mod verify
    
    - name: Go test
      run: cd go && go test -json > TestResults-1.21.x.json

    - name: Upload Go test results
      uses: actions/upload-artifact@v4
      with:
        name: Go-results-1.21.x
        path: TestResults-1.21.x.json

    - name: Build
      run: cd go && go build -v .

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        create_credentials_file: true
        workload_identity_provider: 'projects/618195615441/locations/global/workloadIdentityPools/github-new/providers/github-1' # "projects/123456789/locations/global/workloadIdentityPools/github/providers/my-repo"
        # project_id: 'alokproject-201614'
        service_account: 'githubactions4@alokproject-201614.iam.gserviceaccount.com'
        # credentials_json: ${{ env.G_CRED }} # Replace with the name of your GitHub Actions secret
        # export_environment_variables: true

    # Setup gcloud CLI
    - name: Set up gcloud
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: alokproject

    # - name: 'Use gcloud CLI'
    #   run: 'gcloud info'
      # with:
      #   service_account_key: ${{ secrets.GKE_SA_KEY }}
      #   project_id: ${{ env.PROJECT_ID }}


    # Get the GKE credentials so we can deploy to the cluster
    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v2.1.0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        # location: ${{ env.GKE_ZONE }}
        location: europe-west1
        # project_id: 'alokproject'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        push: true
        tags: alokhom/web:latest


    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        cd go && ./kustomize build deployments/ | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        # kubectl get services -o wide